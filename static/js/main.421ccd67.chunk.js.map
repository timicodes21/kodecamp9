{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","props","handleFirstName","e","setState","firstName","target","value","handleLastName","lastName","handleEmail","email","handleGender","gender","handleAddress","address","handleBio","bio","handleSubmit","preventDefault","state","details","console","log","this","Container","className","Row","Form","onSubmit","Group","controlId","Label","Control","type","onChange","placeholder","required","Select","as","rows","Button","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.421ccd67.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport { Container, Form, Button, Row } from 'react-bootstrap'\r\n\r\nexport class App extends Component {\r\n    constructor(props) {\r\n      super(props)\r\n    \r\n      this.state = {\r\n        firstName: \"\",\r\n        lastName: \"\",\r\n        email: \"\",\r\n        gender: \"\",\r\n        address: \"\",\r\n        bio: \"\"\r\n      }\r\n    }\r\n\r\n    handleFirstName = (e) => {\r\n        this.setState({ firstName: e.target.value })\r\n    }\r\n\r\n    handleLastName = (e) => {\r\n        this.setState({ lastName: e.target.value })\r\n    }\r\n\r\n    handleEmail = (e) => {\r\n        this.setState({ email: e.target.value })\r\n    }\r\n\r\n    handleGender = (e) => {\r\n        this.setState({ gender: e.target.value })\r\n    }\r\n\r\n    handleAddress = (e) => {\r\n        this.setState({ address: e.target.value })\r\n    }\r\n\r\n    handleBio = (e) => {\r\n        this.setState({ bio: e.target.value })\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const { firstName, lastName, email, gender, address, bio } = this.state;\r\n        const details = {\r\n            firstName, lastName, email, gender, address, bio\r\n        }\r\n        console.log(details);\r\n        return details;\r\n    }\r\n\r\n  render() {\r\n      const { firstName, lastName, email, gender, address, bio } = this.state;\r\n      const { handleFirstName, handleLastName, handleEmail, handleGender, handleAddress, handleBio, handleSubmit } = this;\r\n\r\n    return (\r\n      <div>\r\n            <Container>\r\n                <div className=\"text-center\">\r\n                    <h3 className=\"text-primary my-3\">Profile</h3>\r\n                </div>\r\n                <Row>\r\n                    <div className=\"col-12 col-md-4\"></div>\r\n                    <div className=\"col-12 col-md-4\">\r\n                        <Form onSubmit={handleSubmit}>\r\n                            <Form.Group className=\"mb-3\" controlId=\"firstname\">\r\n                                <Form.Label>First Name</Form.Label>\r\n                                <Form.Control type=\"text\" value={firstName} onChange={handleFirstName} placeholder=\"first name\" required />\r\n                            </Form.Group>\r\n                            <Form.Group className=\"mb-3\" controlId=\"lastname\">\r\n                                <Form.Label>Last Name</Form.Label>\r\n                                <Form.Control type=\"text\" value={lastName} onChange={handleLastName} placeholder=\"last name\" required />\r\n                            </Form.Group>\r\n                            <Form.Group className=\"mb-3\" controlId=\"email\">\r\n                                <Form.Label>Email</Form.Label>\r\n                                <Form.Control type=\"email\" value={email} onChange={handleEmail} placeholder=\"email\" required />\r\n                            </Form.Group>\r\n                            <Form.Group className=\"mb-3\">\r\n                                <Form.Label>Gender</Form.Label>\r\n                                <Form.Select value={gender} onChange={handleGender} required>\r\n                                    <option></option>\r\n                                    <option value=\"male\">Male</option>\r\n                                    <option value=\"female\">Female</option>\r\n                                    <option value=\"Prefer not to say\">Prefer not to say</option>\r\n                                </Form.Select>\r\n                            </Form.Group>\r\n                            <Form.Group className=\"mb-3\" controlId=\"address\">\r\n                                <Form.Label>Address</Form.Label>\r\n                                <Form.Control as=\"textarea\" rows={3} value={address} onChange={handleAddress} required />\r\n                            </Form.Group>\r\n                            <Form.Group className=\"mb-3\" controlId=\"bio\">\r\n                                <Form.Label>Bio</Form.Label>\r\n                                <Form.Control as=\"textarea\" rows={3} value={bio} onChange={handleBio} required />\r\n                            </Form.Group>\r\n                            <Button type=\"submit\" className=\"w-100 mb-3\">Submit</Button>\r\n                        </Form>\r\n                    </div>\r\n                    <div className=\"col-12 col-md-4\"></div>\r\n                </Row>\r\n            </Container>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}